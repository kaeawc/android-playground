apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "io.kaeawc.app"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode rootProject.gitCommitCount
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 28
        renderscriptSupportModeEnabled true
    }

    buildTypes {
        debug {
            crunchPngs false
            debuggable true
            minifyEnabled false
            testCoverageEnabled false
            rootProject.ext.alwaysUpdateBuildId = false
        }
        release {
            crunchPngs true
            minifyEnabled false
            testCoverageEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    lintOptions {
        abortOnError true
        checkReleaseBuilds false
        absolutePaths false
        checkAllWarnings true
    }

    packagingOptions {
        exclude "META-INF/rxjava.properties"
        exclude "META-INF/DEPENDENCIES.txt"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/LICENSE"
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/notice.txt"
        exclude "META-INF/license.txt"
        exclude "META-INF/dependencies.txt"
        exclude "META-INF/LGPL2.1"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    implementation("io.arrow-kt:arrow-core:${versions.arrow}") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-reflect"
    }

    // Android Support Libraries
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation "com.google.android.material:material:${versions.androidX}"
    implementation "androidx.palette:palette:${versions.androidX}"
    implementation "androidx.recyclerview:recyclerview:${versions.androidX}"
    implementation "androidx.dynamicanimation:dynamicanimation:${versions.androidX}"

    // Network
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"

    // Dagger
    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxandroid}"

    // Logging
    implementation "com.jakewharton.timber:timber:${versions.timber}"

    // Time
    implementation "com.jakewharton.threetenabp:threetenabp:${versions.threeten}"

    // Storage
    implementation "androidx.room:room-runtime:${versions.room}"
    // kapt "androidx.room:room-compiler:${versions.room}"

    // Unit Testing
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"
    testImplementation "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"

    implementation project(':github')
    implementation project(":domain")
    implementation project(":launch")
    implementation project(":repos")
    implementation project(":storage")
}
